# HG changeset patch
# User Punarbasu Purkayastha <ppurka@gmail.com>
# Date 1354981663 -28800
# Node ID 22f0d7dc42bd0d6ab0ff8d528c2746cf7a73a73e
# Parent  d4700f4a6c8739b20dbe75fb355fd9f300285c14
Enable the option to have Type 1 fonts in the figures

diff --git a/sage/plot/graphics.py b/sage/plot/graphics.py
--- a/sage/plot/graphics.py
+++ b/sage/plot/graphics.py
@@ -1251,7 +1251,9 @@
                         # Legend options
                         legend_options={}, show_legend=None,
                         # Ticks options
-                        ticks=None, tick_formatter=None, ticks_integer=False)
+                        ticks=None, tick_formatter=None, ticks_integer=False,
+                        # Text options
+                        typeset='default')
 
     @suboptions('legend',
                 back_color=(0.9, 0.9, 0.9), borderpad=0.6,
@@ -1475,11 +1477,24 @@
               do use noninteger ``base`` for the logarithm, then provide
               your own tick formatter using the option ``tick_formatter``.
 
+        - ``typeset`` -- (default: ``"default"``) string. The type of
+          font rendering that should be used for the text. The possible
+          values are
+
+          - ``"default"`` -- Uses matplotlib's internal text rendering
+            engine called Mathtext ( see
+            http://matplotlib.org/users/mathtext.html#mathtext-tutorial ).
+          - ``"latex"`` -- LaTeX is used for rendering the fonts. This
+            requires LaTeX, dvipng and Ghostscript to be installed.
+          - ``"type1"`` -- Type 1 fonts are used by matplotlib in the text
+            in the figure.  This requires LaTeX, dvipng and Ghostscript to
+            be installed.
+
         EXAMPLES::
-        
+
             sage: c = circle((1,1), 1, color='red')
             sage: c.show(xmin=-1, xmax=3, ymin=-1, ymax=3)
-        
+
         You could also just make the picture larger by changing ``figsize``::
 
             sage: c.show(figsize=8, xmin=-1, xmax=3, ymin=-1, ymax=3)
@@ -1502,6 +1517,18 @@
 
             sage: plot(sin, -4, 4, title='Plot sin(x)', title_pos=(0.05,-0.05))
 
+        If you want all the text to be rendered by using an external LaTeX
+        installation then set the ``typeset`` to ``"latex"``. This
+        requires that LaTeX, dvipng and Ghostscript be installed::
+
+            sage: plot(x, typeset='latex') # optional - latex
+
+        If you want all the text in your plot to use Type 1 fonts, then
+        set the ``typeset`` option to ``"type1"``. This requires that
+        LaTeX, dvipng and Ghostscript be installed::
+
+            sage: plot(x, typeset='type1') # optional - latex
+
         You can turn on the drawing of a frame around the plots::
 
             sage: show(plot(sin,-4,4), frame=True)
@@ -2108,7 +2135,8 @@
                    show_legend=None, legend_options={},
                    axes_pad=None, ticks_integer=None,
                    tick_formatter=None, ticks=None, title=None,
-                   title_pos=None, base=None, scale=None):
+                   title_pos=None, base=None, scale=None,
+                   typeset='default'):
         r"""
         Return a matplotlib figure object representing the graphic
 
@@ -2175,6 +2203,19 @@
 
         from matplotlib.figure import Figure
         from matplotlib import rcParams
+        if typeset == 'type1': # Requires LaTeX to be installed.
+            rcParams['ps.useafm'] = True
+            rcParams['pdf.use14corefonts'] = True
+            rcParams['text.usetex'] = True
+        elif typeset == 'latex':
+            rcParams['ps.useafm'] = False
+            rcParams['pdf.use14corefonts'] = False
+            rcParams['text.usetex'] = True
+        else:
+            rcParams['ps.useafm'] = False
+            rcParams['pdf.use14corefonts'] = False
+            rcParams['text.usetex'] = False
+
         self.fontsize(fontsize)
         self.axes_labels(l=axes_labels)
 
diff --git a/sage/plot/plot.py b/sage/plot/plot.py
--- a/sage/plot/plot.py
+++ b/sage/plot/plot.py
@@ -1010,6 +1010,12 @@
 
         sage: plot(x**2, (x,0,3), ticks=[[1,2.5],[0.5,1,2]], tick_formatter=[["$x_1$","$x_2$"],["$y_1$","$y_2$","$y_3$"]])
 
+    You can force Type 1 fonts in your figures by providing the relevant
+    option as shown below. This also requires that LaTeX, dvipng and
+    Ghostscript be installed::
+
+        sage: plot(x, typeset='type1') # optional - latex
+
     A example with excluded values::
 
         sage: plot(floor(x), (x, 1, 10), exclude = [1..10])
