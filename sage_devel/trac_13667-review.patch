# HG changeset patch
# User Punarbasu Purkayastha <ppurka@gmail.com>
# Date 1359286530 -28800
# Node ID 813a5377a29a2675942dd1872d7201d29f75bdd2
# Parent  d4a31b05919399ff07a06c2cd79c37b5588341e2
linear code is a special case

diff --git a/sage/coding/code_bounds.py b/sage/coding/code_bounds.py
--- a/sage/coding/code_bounds.py
+++ b/sage/coding/code_bounds.py
@@ -100,12 +100,18 @@
 Sage, you can determine the best known estimates for this number in
 2 ways:
 
-(1) Indirectly, using best_known_linear_code_www(n, k, F), 
+1. Indirectly, using best_known_linear_code_www(n, k, F),
     which connects to the website http://www.codetables.de by Markus Grassl;
 
-(2) codesize_upper_bound(n,d,q), dimension_upper_bound(n,d,q),
+2. codesize_upper_bound(n,d,q), dimension_upper_bound(n,d,q),
     and best_known_linear_code(n, k, F).
 
+The output of :func:`best_known_linear_code`,
+:func:`best_known_linear_code_www`, or :func:`dimension_upper_bound` would
+give only special solutions to the GAME because the bounds are applicable
+to only linear codes. The output of :func:`codesize_upper_bound` would give
+the best possible solution, that may belong to a linear or nonlinear code.
+
 This module implements:
 
 -  codesize_upper_bound(n,d,q), for the best known (as of May,
