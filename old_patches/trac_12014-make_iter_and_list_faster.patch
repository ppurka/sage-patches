# HG changeset patch
# User Punarbasu Purkayastha <ppurka@gmail.com>
# Date 1321087218 -28800
# Node ID ceceb04b2308d9fdeccf627e74e7b2acaf0416f9
# Parent  5149624d99e0a7de3dd1d1465092a4a842a30e16
this patch makes the following changes/fixes
 - make __iter__ and list faster by using #13417
 - fix inconsistent output between __iter__ and list
 - fix for the fact that list(some_code) may return codewords from a permuted generator matrix instead of the original generator matrix provided

diff --git a/sage/coding/linear_code.py b/sage/coding/linear_code.py
--- a/sage/coding/linear_code.py
+++ b/sage/coding/linear_code.py
@@ -835,20 +835,14 @@
 
             sage: C = HammingCode(3,GF(2))
             sage: [list(c) for c in C if c.hamming_weight() < 4]
-            [[0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1],
-            [0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0],
-            [0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1]]
+            [[0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1],
+             [0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0],
+             [1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0],
+             [0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1]]
         """
-        n = self.length()
-        k = self.dimension()
-        F = self.base_ring()
-        Cs,p = self.standard_form()
-        Gs = Cs.gen_mat()
-        V = VectorSpace(F,k)
-        MS = MatrixSpace(F,n,n)
-        perm_mat = MS(p.matrix().rows())**(-1)
-        for v in V:
-            yield (v*Gs)*perm_mat
+        from sage.modules.finite_submodule_iter import \
+                                                FiniteFieldsubspace_iterator
+        return FiniteFieldsubspace_iterator(self.gen_mat())
 
     def ambient_space(self):
         r"""
@@ -1855,7 +1849,7 @@
             (1, 0, 1, 0, 1, 0, 1)
             True
         """
-        return self.gen_mat().row_space().list()
+        return list(self.__iter__())
 
     def _magma_init_(self, magma):
         r"""
